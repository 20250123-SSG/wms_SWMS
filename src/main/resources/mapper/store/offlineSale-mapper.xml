<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swms.store.model.dao.OfflineSaleMapper">

    <insert id="createOfflineSale" parameterType="OfflineSaleDto" useGeneratedKeys="true" keyProperty="offlineSaleId">
        insert into
        tbl_offline_sale
            (
            store_id
          , shoes_id
          , quantity
            )
        values
            (
            #{storeId}
          , #{shoesId}
          , #{quantity}
            )
    </insert>

    <select id="selectOfflineSaleByStoreId" resultType="OfflineSaleDto">
        SELECT
            ow.offline_sale_id,
            ow.store_id,
            ow.shoes_id,
            ow.quantity,
            ow.sale_date,
            st.store_name,
            st.store_phone,
            st.store_address,
            s.shoes_name,
            s.shoes_price,
            s.size,
            s.shoes_type_id,
            s.brand_id,
            t.shoes_type,
            b.brand_name
        FROM tbl_offline_sale ow
            JOIN tbl_store st ON ow.store_id = st.store_id
            JOIN tbl_shoes s ON ow.shoes_id = s.shoes_id
            JOIN tbl_shoes_type t ON s.shoes_type_id = t.shoes_type_id
            JOIN tbl_brand b ON s.brand_id = b.brand_id
        WHERE ow.store_id = #{storeId}
        ORDER BY ow.offline_sale_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

</mapper>